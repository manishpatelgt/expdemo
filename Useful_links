DI (dependency-injection):
https://developer.android.com/training/dependency-injection/dagger-basics

Kotlin code ktx
https://developer.android.com/kotlin/ktx

Coroutine clear guidance:
https://medium.com/mindful-engineering/fast-lane-to-coroutines-bce8388ed82b
https://developer.android.com/kotlin/coroutines

Lifecycle aware coroutines
https://android.jlelse.eu/coroutine-in-android-working-with-lifecycle-fc9c1a31e5f3

Fragment Factory:
https://proandroiddev.com/android-fragments-fragmentfactory-ceec3cf7c959

ViewModel + LiveData
https://www.javacodemonk.com/kotlin-coroutines-with-retrofit-and-livedata-790f6376
https://medium.com/corouteam/exploring-kotlin-coroutines-and-lifecycle-architectural-components-integration-on-android-c63bb8a9156f
https://proandroiddev.com/suspend-what-youre-doing-retrofit-has-now-coroutines-support-c65bd09ba067

Created orphan branch for bitbucket

Commands:
Create empty git repository

C:\Users\Manish Patel\AndroidStudioProjects\Dagger2demo>git init
Initialized empty Git repository in C:/Users/Manish Patel/AndroidStudioProjects/Dagger2demo/.git/

C:\Users\Manish Patel\AndroidStudioProjects\Dagger2demo>git checkout --orphan dagger2_demo
Switched to a new branch 'dagger2_demo'

Builder Pattern Vs. DSL in Kotlin
https://medium.com/mindorks/builder-pattern-vs-kotlin-dsl-c3ebaca6bc3b
https://blog.mindorks.com/function-literals-with-receiver-in-kotlin

Which libs you can choose ?
https://blog.karumi.com/our-android-2020-development-stack/amp/?__twitter_impression=true


FragmentFactory + Dagger2 + FragmentViewContainer
https://developer.android.com/jetpack/androidx/releases/fragment
https://proandroiddev.com/android-fragments-fragmentcontainerview-292f393f9ccf
https://proandroiddev.com/android-fragments-fragmentfactory-ceec3cf7c959
https://medium.com/@zawadz88/androidx-navigation-with-dagger-2-fragmentfactory-789b01b43214
https://medium.com/@ruddns8213/android-fragmentcontainerview-ac73705b384d
https://amryousef.me/new-in-androidx-fragment
https://www.techyourchance.com/fragment-factory-android/
https://proandroiddev.com/painless-dagger-android-kotlin-2c3767a24508
https://desmondtzq.com/2019/10/25/fragment-factory-dagger/
https://medium.com/mj-studio/fancy-fragment-fragmentfactory-dagger-1a574aa5a570

MVVM:
https://medium.com/@success.anil.kk/inducing-mvvm-to-existing-kotlin-code-704433d64e61

ViewModel State:
https://medium.com/androiddevelopers/viewmodels-a-simple-example-ed5ac416317e
https://medium.com/androiddevelopers/viewmodels-persistence-onsaveinstancestate-restoring-ui-state-and-loaders-fc7cc4a6c090
https://proandroiddev.com/optimizing-viewmodel-with-lifecycle-2-2-0-a2895b5c01fd
https://blog.mindorks.com/viewmodel-with-savedstate
https://www.fandroid.info/viewmodels-with-saved-state/
https://developer.android.com/topic/libraries/architecture/viewmodel-savedstate
https://developer.android.com/topic/libraries/architecture/saving-states

Jetpack Pagination
https://codelabs.developers.google.com/codelabs/android-paging/index.html?index=..%2F..%2Findex#0